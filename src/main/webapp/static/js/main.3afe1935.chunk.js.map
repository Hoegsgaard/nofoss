{"version":3,"sources":["stores/VehicleStore.js","components/CreateVehicle.js","components/CreateUser.js","stores/UserStore.js","components/CustomNavBar.js","components/Login.js","components/CarCard.js","components/SearchVehicleNew.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["VehicleStore","vehicles","brand","name","price","maxWeight","maxRange","fuelType","imageLink","brands","newBrand","newName","newPrice","newMaxWeight","newMaxRange","newFuelType","newImageLink","decorate","observable","vehicleStore","CreateVehicle","observer","Container","Row","Col","md","span","offset","style","background","padding","border","borderColor","borderRadius","InputGroup","className","FormControl","aria-label","aria-describedby","value","onChange","e","target","newWeight","newFuel","Button","onClick","push","width","CreateUser","userStore","adminNavBar","href","CustomNavBar","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","Brand","map","element","Link","src","alt","LogIn","color","CarCard","Car","Card","Header","Body","SearchVehicleNew","React","useState","setValue","brandArray","cardArray","vehicle","Volvo","Mercedes","Ford","state","setState","checkboxChange","event","checked","checkBoxArray","FormControlLabel","control","label","gutterBottom","valueLabelDisplay","aria-labelledby","newValue","aria-valuemax","aria-valuemin","Append","Text","xs","Profile","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3afe1935.chunk.js","sourcesContent":["import {decorate, observable} from \"mobx\";\r\n\r\nclass VehicleStore{\r\n    vehicles = [\r\n        {brand: 'Volvo', name: '5-53x', price: '2500001', maxWeight: '696969', maxRange: '420420', fuelType: 'nutella', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\r\n        {brand: 'Ford', name: 'D-Linje', price: '1503000', maxWeight: '696969', maxRange: '420420', fuelType: 'mustard', imageLink: 'https://varebilogtransport.dk/wp-content/uploads/2019/05/Ford-F-Max-tyrkisk-truck-3_-1008x516.jpg'},\r\n        {brand: 'Mercedes', name: 'Stor-20', price: '35900000', maxWeight: '696969', maxRange: '420420', fuelType: 'gas', imageLink: 'https://www.mercedesbenzcph.dk/lastbiler/wp-content/uploads/2018/11/18C0490_05022-2000x800.png'},\r\n        {brand: 'Volvo', name: '5-53x', price: '2500001', maxWeight: '696969', maxRange: '420420', fuelType: 'nutella', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\r\n        {brand: 'Ford', name: 'D-Linje', price: '1503000', maxWeight: '696969', maxRange: '420420', fuelType: 'mustard', imageLink: 'https://varebilogtransport.dk/wp-content/uploads/2019/05/Ford-F-Max-tyrkisk-truck-3_-1008x516.jpg'},\r\n        {brand: 'Mercedes', name: 'Stor-20', price: '35900000', maxWeight: '696969', maxRange: '420420', fuelType: 'gas', imageLink: 'https://www.mercedesbenzcph.dk/lastbiler/wp-content/uploads/2018/11/18C0490_05022-2000x800.png'},\r\n        {brand: 'Volvo', name: '5-53x', price: '2500001', maxWeight: '696969', maxRange: '420420', fuelType: 'nutella', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\r\n        {brand: 'Ford', name: 'D-Linje', price: '1503000', maxWeight: '696969', maxRange: '420420', fuelType: 'mustard', imageLink: 'https://varebilogtransport.dk/wp-content/uploads/2019/05/Ford-F-Max-tyrkisk-truck-3_-1008x516.jpg'},\r\n        {brand: 'Mercedes', name: 'Stor-20', price: '35900000', maxWeight: '696969', maxRange: '420420', fuelType: 'gas', imageLink: 'https://www.mercedesbenzcph.dk/lastbiler/wp-content/uploads/2018/11/18C0490_05022-2000x800.png'},\r\n        {brand: 'Volvo', name: '5-53x', price: '2500001', maxWeight: '696969', maxRange: '420420', fuelType: 'nutella', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\r\n        {brand: 'Ford', name: 'D-Linje', price: '1503000', maxWeight: '696969', maxRange: '420420', fuelType: 'mustard', imageLink: 'https://varebilogtransport.dk/wp-content/uploads/2019/05/Ford-F-Max-tyrkisk-truck-3_-1008x516.jpg'},\r\n        {brand: 'Mercedes', name: 'Stor-20', price: '35900000', maxWeight: '696969', maxRange: '420420', fuelType: 'gas', imageLink: 'https://www.mercedesbenzcph.dk/lastbiler/wp-content/uploads/2018/11/18C0490_05022-2000x800.png'}];\r\n\r\n    brands = [\"Volvo\", \"Ford\", \"Mercedes\"]\r\n\r\n    newBrand = \"\";\r\n    newName = \"\";\r\n    newPrice = \"\";\r\n    newMaxWeight = \"\";\r\n    newMaxRange = \"\";\r\n    newFuelType = \"\";\r\n    newImageLink = \"\";\r\n}\r\n\r\ndecorate(VehicleStore,{\r\n    vehicles: observable,\r\n    newBrand: observable,\r\n    newName: observable,\r\n    newPrice: observable,\r\n    newMaxWeight: observable,\r\n    newMaxRange: observable,\r\n    newFuelType: observable,\r\n    newImageLink: observable\r\n});\r\n\r\nexport const vehicleStore = new VehicleStore();","import {observer} from \"mobx-react\";\r\nimport {Col, Container, FormControl, InputGroup, Row} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\nimport {vehicleStore} from \"../stores/VehicleStore\";\r\n\r\nexport const CreateVehicle = observer(() => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row><Col md={{span: 6, offset: 3}}\r\n                          style={{\r\n                              background: '#fff',\r\n                              padding: '20pt',\r\n                              border: '1px solid',\r\n                              borderColor: '#d8dee2',\r\n                              borderRadius: \"5pt\"\r\n                          }}>\r\n                    <Container>\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Brand</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    value={vehicleStore.newBrand}\r\n                                    onChange={(e) => vehicleStore.newBrand = e.target.value}\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Weight</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    value={vehicleStore.newWeight}\r\n                                    onChange={(e) => vehicleStore.newWeight = e.target.value}\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Fuel</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    value={vehicleStore.newFuel} onChange={(e) => vehicleStore.newFuel = e.target.value}\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <Button onClick={() => vehicleStore.vehicles.push({\r\n                                brand: vehicleStore.newBrand,\r\n                                name: vehicleStore.newWeight,\r\n                                price: vehicleStore.newFuel\r\n                            })} style={{\r\n                                width: '100%',\r\n                                background: '#637724',\r\n                                borderColor: '#637724'\r\n                            }}>Opret Køretøj</Button>\r\n                        </Col></Row>\r\n                    </Container>\r\n                </Col></Row>\r\n            </Container>\r\n        </div>\r\n\r\n\r\n    );\r\n})","import {Col, FormControl, InputGroup, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport function CreateUser() {\r\n    return (\r\n        <div >\r\n            <Container>\r\n                <Row><Col md={{span: 6, offset: 3}} style={{\r\n                    background: '#fff',\r\n                    padding: '20pt',\r\n                    border: '1px solid',\r\n                    borderColor: '#d8dee2',\r\n                    borderRadius: \"5pt\"\r\n                }}>\r\n\r\n\r\n                    <Container>\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Firm</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>First Name</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Last Name</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Email</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Password</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Password Confirm</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <Button style={{\r\n                                width: '100%',\r\n                                background:'#637724',\r\n                                borderColor:'#637724'\r\n                            }}>Opret bruger</Button>\r\n                        </Col></Row>\r\n                    </Container>\r\n\r\n                </Col></Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","class UserStore{\r\n    adminNavBar = [\r\n        {href:\"#/search\",name:\"Søg køretøj\"},\r\n        {href:\"#/create/vehicle\",name:\"Opret køretøj\"},\r\n        {href:\"#/profile\",name:\"Profil\"},\r\n        {href:\"#/login\",name:\"Login\"}];\r\n}\r\n\r\nexport const userStore = new UserStore();","import {observer} from \"mobx-react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport React from \"react\";\r\nimport {userStore} from \"../stores/UserStore\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport const CustomNavBar = observer(() => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={{span: 8, offset: 0}}>\r\n                    <Navbar bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                <Navbar.Brand href={'#/search'}>Nofoss</Navbar.Brand>\r\n                                {userStore.adminNavBar.map((element) => <Nav.Link href={element.href}>{element.name}</Nav.Link>)}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </Col>\r\n                <Col md={{span: 4, offset:0}} className=\"d-none d-lg-block\">\r\n                    <img src=\"https://i.imgur.com/bVMYcYR.png\" className=\"Logo\" alt=\"NoFoss Logo\"/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n});","import {Col, FormControl, InputGroup, Row} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CreateUser} from \"./CreateUser\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport const LogIn = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row><Col md={{span: 6, offset: 3}} style={{\r\n                    background: '#fff',\r\n                    padding: '20pt',\r\n                    border: '1px solid',\r\n                    borderColor: '#d8dee2',\r\n                    borderRadius: \"5pt\"\r\n                }}>\r\n                    <Container>\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Email</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row><Col md={{span: 10, offset: 1}}>\r\n                            <text>Password</text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                />\r\n                            </InputGroup></Col></Row>\r\n\r\n                        <Row>\r\n                            <Col md={{span: 5, offset: 1}}>\r\n                                <Button style={{\r\n                                    width: '100%',\r\n                                    background:'#637724',\r\n                                    borderColor:'#637724'\r\n                                }}>Login</Button>\r\n                            </Col>\r\n                            <Col md={{span: 5, offset: 0}}>\r\n                                <Button href=\"#/create/User\"\r\n                                        style={{\r\n                                    width: '100%',\r\n                                    background: '#fff',\r\n                                    border: '1px solid',\r\n                                    borderColor: '#637724',\r\n                                    color:'#637724'\r\n                                }}>Opret bruger</Button >\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Col></Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nexport function CarCard({Car}) {\r\n    const {name,brand,price,fuelType,maxWeight,maxRange,imageLink} = Car\r\n    return (\r\n        <Card>\r\n            <Row>\r\n                <Col md={{span: 4, offset: 0}}>\r\n                    <Card.Header>{brand} - {name}</Card.Header>\r\n                    <Card.Body>\r\n                        <img style={{width: '100%'}} src={imageLink} alt=\"Billede af bil\"/>\r\n                    </Card.Body>\r\n                </Col>\r\n                <Col>\r\n                    <Card.Body>\r\n                        Pris: {price} kr.\r\n                        <br/>\r\n                        Totalvægt: {maxWeight} kg.\r\n                        <br/>\r\n                        Total rækkevidde: {maxRange} km.\r\n                        <br/>\r\n                        Brændstof: {fuelType}.\r\n                    </Card.Body>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    )\r\n}","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {vehicleStore} from \"../stores/VehicleStore\";\r\nimport {CarCard} from \"./CarCard\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {FormControl, InputGroup} from \"react-bootstrap\";\r\nimport Slider from \"@material-ui/core/Slider/Slider\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nexport const SearchVehicleNew = () => {\r\n\r\n    const [value, setValue] = React.useState([0, 100]);\r\n    const brandArray = vehicleStore.brands\r\n    const cardArray = []\r\n\r\n    /*For each vehicle we insert data in arrays to do further work it*/\r\n    vehicleStore.vehicles.map(vehicle => (\r\n\r\n        /*Here should be a filter to only insert the cards passing the filter into the cardArray*/\r\n        cardArray.push(<CarCard Car={vehicle}/>)\r\n    ));\r\n\r\n    /*Contains checkbox boolean setting TODO: implement these with brandArray*/\r\n    const [state, setState] = React.useState({\r\n        Volvo:true,\r\n        Mercedes:true,\r\n        Ford:true\r\n    });\r\n\r\n    const checkboxChange = name => event => {\r\n        setState({...state, [name]: event.target.checked});\r\n    };\r\n\r\n    const sliderChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    /*TODO: change checkboxChange reference and checked reference to {brand}-object instead of hardcoded string.  */\r\n    const checkBoxArray = brandArray.map(brand => (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    checked={true}\r\n                    onChange={checkboxChange(brand)}\r\n                    value={brand}\r\n                />\r\n            }\r\n            label={brand}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Typography gutterBottom>Mærke</Typography>\r\n                    {checkBoxArray}\r\n\r\n                    <Typography gutterBottom>Navn</Typography>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                            aria-label=\"Default\"\r\n                            aria-describedby=\"inputGroup-sizing-default\"\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <Typography id=\"range-slider\" gutterBottom>Pris</Typography>\r\n                    <Slider\r\n                        value={value}\r\n                        valueLabelDisplay=\"auto\"\r\n                        aria-labelledby=\"range-slider\"\r\n                        onChange={sliderChange}\r\n                        aria-valuemax={1000000}\r\n                        aria-valuemin={10}\r\n                    />\r\n\r\n                    <Typography gutterBottom>Max vægt</Typography>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                            aria-label=\"Default\"\r\n                            aria-describedby=\"inputGroup-sizing-default\"\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Text id=\"basic-addon2\">kg.</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n\r\n                    <Typography gutterBottom>Max rækkevidde</Typography>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                            aria-label=\"Default\"\r\n                            aria-describedby=\"inputGroup-sizing-default\"\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Text id=\"basic-addon2\">km.</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n\r\n                    <Button style={{width: '100%'}}>Search, but I dont do anything :) </Button>\r\n\r\n                </Col>\r\n                <Col xs={8}>{cardArray}</Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React from \"react\";\r\nimport {observer} from \"mobx-react\";\r\n\r\nexport const Profile = observer(()=>{\r\n    return(\r\n        <h1>Her vil dine profil indstillinger blive vist</h1>\r\n    )\r\n})","import React from 'react';\r\nimport {observer} from \"mobx-react\";\r\nimport {Switch} from \"react-router\";\r\nimport {Route} from \"react-router-dom\"\r\nimport './App.css';\r\nimport {CreateVehicle} from \"./components/CreateVehicle\";\r\nimport {CreateUser} from \"./components/CreateUser\";\r\nimport {CustomNavBar} from \"./components/CustomNavBar\";\r\nimport {LogIn} from \"./components/Login\";\r\nimport {SearchVehicleNew} from \"./components/SearchVehicleNew\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {Profile} from \"./components/Profile\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Container>\r\n            <CustomNavBar/>\r\n                <Switch>\r\n                    <Route exact path={\"/login\"} component={LogIn}/>\r\n                    <Route exact path={\"/search\"} component={SearchVehicleNew}/>\r\n                    <Route exact path={\"/create/vehicle\"} component={CreateVehicle}/>\r\n                    <Route exact path={\"/create/user\"} component={CreateUser}/>\r\n                    <Route exact path={\"/profile\"} component={Profile}/>\r\n                    <Route exact path={\"/\"} component={SearchVehicleNew}/>\r\n                    <Route render={() => <h1>404</h1>}/>\r\n                </Switch>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default observer(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}