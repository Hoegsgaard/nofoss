{"version":3,"sources":["stores/VehicleStore.js","components/CreateVehicle.js","components/CreateUser.js","stores/UserStore.js","components/CustomNavBar.js","components/Login.js","components/CarCard.js","components/SearchVehicleNew.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["VehicleStore","selectedBrands","searchName","searchWeight","searchRange","vehicles","brand","name","price","maxWeight","maxRange","fuelType","imageLink","brands","newBrand","newName","newPrice","newMaxWeight","newMaxRange","newFuelType","newImageLink","console","log","this","vehicleStore","filter","vehicle","length","includes","Number","decorate","observable","filteredVehicles","computed","CreateVehicle","observer","Container","Row","Col","md","span","offset","style","background","padding","border","borderColor","borderRadius","InputGroup","className","FormControl","aria-label","aria-describedby","value","onChange","e","target","newWeight","newFuel","onClick","push","width","CreateUser","userStore","adminNavBar","href","token","CustomNavBar","bg","expand","Toggle","aria-controls","Collapse","id","Brand","map","element","Link","src","alt","LogIn","color","CarCard","Car","Header","Body","SearchVehicleNew","React","useState","setValue","Volvo","Mercedes","Ford","checkBoxArray","key","FormControlLabel","control","checked","index","indexOf","splice","label","gutterBottom","valueLabelDisplay","aria-labelledby","event","newValue","aria-valuemax","aria-valuemin","Append","Text","xs","Profile","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91c38f9a.chunk.js","sourcesContent":["import {computed, decorate, observable} from \"mobx\";\n\nclass VehicleStore{\n    selectedBrands = [\"\"];\n    searchName = \"\";\n    searchWeight = 0.0;\n    searchRange = 0.0;\n\n    vehicles = [\n        {brand: 'Volvo', name: '5-53x', price: '2500001', maxWeight: '696969', maxRange: '420420', fuelType: 'nutella', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Ford', name: 'D-Linje', price: '1503000', maxWeight: '696969', maxRange: '420420', fuelType: 'mustard', imageLink: 'https://varebilogtransport.dk/wp-content/uploads/2019/05/Ford-F-Max-tyrkisk-truck-3_-1008x516.jpg'},\n        {brand: 'Mercedes', name: 'Stor-20', price: '35900000', maxWeight: '696969', maxRange: '420420', fuelType: 'gas', imageLink: 'https://www.mercedesbenzcph.dk/lastbiler/wp-content/uploads/2018/11/18C0490_05022-2000x800.png'},\n        {brand: 'Volvo', name: '5-53x', price: '2500001', maxWeight: '696969', maxRange: '420420', fuelType: 'nutella', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Ford', name: 'D-Linje', price: '1503000', maxWeight: '696969', maxRange: '420420', fuelType: 'mustard', imageLink: 'https://varebilogtransport.dk/wp-content/uploads/2019/05/Ford-F-Max-tyrkisk-truck-3_-1008x516.jpg'},\n        {brand: 'Mercedes', name: 'Stor-20', price: '35900000', maxWeight: '696969', maxRange: '420420', fuelType: 'gas', imageLink: 'https://www.mercedesbenzcph.dk/lastbiler/wp-content/uploads/2018/11/18C0490_05022-2000x800.png'},\n        {brand: 'Volvo', name: '5-53x', price: '2500001', maxWeight: '696969', maxRange: '420420', fuelType: 'nutella', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Ford', name: 'D-Linje', price: '1503000', maxWeight: '696969', maxRange: '420420', fuelType: 'mustard', imageLink: 'https://varebilogtransport.dk/wp-content/uploads/2019/05/Ford-F-Max-tyrkisk-truck-3_-1008x516.jpg'},\n        {brand: 'Mercedes', name: 'Stor-20', price: '35900000', maxWeight: '696969', maxRange: '420420', fuelType: 'gas', imageLink: 'https://www.mercedesbenzcph.dk/lastbiler/wp-content/uploads/2018/11/18C0490_05022-2000x800.png'},\n        {brand: 'Volvo', name: '5-53x', price: '2500001', maxWeight: '696969', maxRange: '420420', fuelType: 'nutella', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Ford', name: 'D-Linje', price: '1503000', maxWeight: '696969', maxRange: '420420', fuelType: 'mustard', imageLink: 'https://varebilogtransport.dk/wp-content/uploads/2019/05/Ford-F-Max-tyrkisk-truck-3_-1008x516.jpg'},\n        {brand: 'Mercedes', name: 'Stor-20', price: '35900000', maxWeight: '696969', maxRange: '420420', fuelType: 'gas', imageLink: 'https://www.mercedesbenzcph.dk/lastbiler/wp-content/uploads/2018/11/18C0490_05022-2000x800.png'}];\n\n    brands = [\"Volvo\", \"Ford\", \"Mercedes\"];\n\n\n    newBrand = \"\";\n    newName = \"\";\n    newPrice = \"\";\n    newMaxWeight = \"\";\n    newMaxRange = \"\";\n    newFuelType = \"\";\n    newImageLink = \"\";\n\n\n\n    get filteredVehicles(){\n        console.log(\"SearchWeight\" + this.searchWeight);\n        return (\n            vehicleStore.vehicles.filter(vehicle =>\n                ((this.selectedBrands.length <=1 || this.selectedBrands.includes(vehicle.brand))\n                    && vehicle.name.includes(this.searchName)\n                    && ((this.searchWeight == 0.0) || Number(vehicle.maxWeight) <= Number(this.searchWeight))\n                    && ((this.searchRange == 0.0) || Number(vehicle.maxRange) <= Number(this.searchRange)))\n            )\n        )\n        //return this.vehicles\n    }\n\n}\n\n\n\n\n\n\ndecorate(VehicleStore,{\n    vehicles: observable,\n    newBrand: observable,\n    newName: observable,\n    newPrice: observable,\n    newMaxWeight: observable,\n    newMaxRange: observable,\n    newFuelType: observable,\n    newImageLink: observable,\n    selectedBrands: observable,\n    searchName: observable,\n    searchWeight: observable,\n    searchRange: observable,\n    filteredVehicles: computed,\n\n});\n\nexport const vehicleStore = new VehicleStore();","import {observer} from \"mobx-react\";\nimport {Col, Container, FormControl, InputGroup, Row} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport {vehicleStore} from \"../stores/VehicleStore\";\n\nexport const CreateVehicle = observer(() => {\n    return (\n        <div>\n            <Container>\n                <Row><Col md={{span: 6, offset: 3}}\n                          style={{\n                              background: '#fff',\n                              padding: '20pt',\n                              border: '1px solid',\n                              borderColor: '#d8dee2',\n                              borderRadius: \"5pt\"\n                          }}>\n                    <Container>\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Brand</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newBrand}\n                                    onChange={(e) => vehicleStore.newBrand = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Weight</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newWeight}\n                                    onChange={(e) => vehicleStore.newWeight = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Fuel</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newFuel} onChange={(e) => vehicleStore.newFuel = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <Button onClick={() => vehicleStore.vehicles.push({\n                                brand: vehicleStore.newBrand,\n                                name: vehicleStore.newWeight,\n                                price: vehicleStore.newFuel\n                            })} style={{\n                                width: '100%',\n                                background: '#637724',\n                                borderColor: '#637724'\n                            }}>Opret Køretøj</Button>\n                        </Col></Row>\n                    </Container>\n                </Col></Row>\n            </Container>\n        </div>\n\n\n    );\n})","import {Col, FormControl, InputGroup, Row} from \"react-bootstrap\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nexport function CreateUser() {\n    return (\n        <div >\n            <Container>\n                <Row><Col md={{span: 6, offset: 3}} style={{\n                    background: '#fff',\n                    padding: '20pt',\n                    border: '1px solid',\n                    borderColor: '#d8dee2',\n                    borderRadius: \"5pt\"\n                }}>\n\n\n                    <Container>\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Firm</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>First Name</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Last Name</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Email</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Password</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Password Confirm</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <Button style={{\n                                width: '100%',\n                                background:'#637724',\n                                borderColor:'#637724'\n                            }}>Opret bruger</Button>\n                        </Col></Row>\n                    </Container>\n\n                </Col></Row>\n            </Container>\n        </div>\n    );\n}","class UserStore{\n    adminNavBar = [\n        {href:\"#/search\",name:\"Søg køretøj\"},\n        {href:\"#/create/vehicle\",name:\"Opret køretøj\"},\n        {href:\"#/profile\",name:\"Profil\"},\n        {href:\"#/login\",name:\"Login\"}];\n    token = \"\";\n}\n\nexport const userStore = new UserStore();","import {observer} from \"mobx-react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport React from \"react\";\nimport {userStore} from \"../stores/UserStore\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\n\nexport const CustomNavBar = observer(() => {\n    return (\n        <Container>\n            <Row>\n                <Col md={{span: 8, offset: 0}}>\n                    <Navbar bg=\"light\" expand=\"lg\">\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n                                <Navbar.Brand href={'#/search'}>Nofoss</Navbar.Brand>\n                                {userStore.adminNavBar.map((element) => <Nav.Link href={element.href}>{element.name}</Nav.Link>)}\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </Col>\n                <Col md={{span: 4, offset:0}} className=\"d-none d-lg-block\">\n                    <img src=\"https://i.imgur.com/bVMYcYR.png\" className=\"Logo\" alt=\"NoFoss Logo\"/>\n                </Col>\n            </Row>\n        </Container>\n\n    );\n});","import {Col, FormControl, InputGroup, Row} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {CreateUser} from \"./CreateUser\";\nimport Container from \"react-bootstrap/Container\";\n\nexport const LogIn = () => {\n    return (\n        <div>\n            <Container>\n                <Row><Col md={{span: 6, offset: 3}} style={{\n                    background: '#fff',\n                    padding: '20pt',\n                    border: '1px solid',\n                    borderColor: '#d8dee2',\n                    borderRadius: \"5pt\"\n                }}>\n                    <Container>\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Email</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Password</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row>\n                            <Col md={{span: 5, offset: 1}}>\n                                <Button style={{\n                                    width: '100%',\n                                    background:'#637724',\n                                    borderColor:'#637724'\n                                }}>Login</Button>\n                            </Col>\n                            <Col md={{span: 5, offset: 0}}>\n                                <Button href=\"#/create/User\"\n                                        style={{\n                                    width: '100%',\n                                    background: '#fff',\n                                    border: '1px solid',\n                                    borderColor: '#637724',\n                                    color:'#637724'\n                                }}>Opret bruger</Button >\n                            </Col>\n                        </Row>\n                    </Container>\n                </Col></Row>\n            </Container>\n        </div>\n    )\n};","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport {Col, Row} from \"react-bootstrap\";\n\nexport function CarCard({Car}) {\n    const {name,brand,price,fuelType,maxWeight,maxRange,imageLink} = Car\n    return (\n        <Card>\n            <Row>\n                <Col md={{span: 4, offset: 0}}>\n                    <Card.Header>{brand} - {name}</Card.Header>\n                    <Card.Body>\n                        <img style={{width: '100%'}} src={imageLink} alt=\"Billede af bil\"/>\n                    </Card.Body>\n                </Col>\n                <Col>\n                    <Card.Body>\n                        Pris: {price} kr.\n                        <br/>\n                        Totalvægt: {maxWeight} kg.\n                        <br/>\n                        Total rækkevidde: {maxRange} km.\n                        <br/>\n                        Brændstof: {fuelType}.\n                    </Card.Body>\n                </Col>\n            </Row>\n        </Card>\n    )\n}","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {vehicleStore} from \"../stores/VehicleStore\";\nimport {CarCard} from \"./CarCard\";\nimport Button from \"react-bootstrap/Button\";\nimport {FormControl, InputGroup} from \"react-bootstrap\";\nimport Slider from \"@material-ui/core/Slider/Slider\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {observer} from \"mobx-react\";\n\nexport const SearchVehicleNew = observer(() => {\n\n    const [value, setValue] = React.useState([0, 100]);\n    //const brandArray = vehicleStore.brands\n\n    /*For each vehicle we insert data in arrays to do further work it*/\n    //vehicleStore.vehicles.map(vehicle => (\n\n        /*Here should be a filter to only insert the cards passing the filter into the cardArray*/\n   //     cardArray.push(<CarCard Car={vehicle}/>)\n    //));\n\n    /*Contains checkbox boolean setting TODO: implement these with brandArray*/\n    const [state, setState] = React.useState({\n        Volvo:true,\n        Mercedes:true,\n        Ford:true\n    });\n\n    const checkboxChange = name => event => {\n        setState({...state, [name]: event.target.checked});\n    };\n\n    const sliderChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    /*TODO: change checkboxChange reference and checked reference to {brand}-object instead of hardcoded string.  */\n    const checkBoxArray = vehicleStore.brands.map((brand,key) =>\n        <FormControlLabel key={key}\n            control={\n                <Checkbox\n                    //checked={true}\n                    //onChange={checkboxChange(brand)}\n                    value={brand}\n                    onChange = {(e) => {\n                        if(e.target.checked){\n                            vehicleStore.selectedBrands.push(brand)\n                            console.log(vehicleStore.selectedBrands)\n                        }else{\n                            var index = vehicleStore.selectedBrands.indexOf(e.target.value);\n                            if (index > -1) {\n                                vehicleStore.selectedBrands.splice(index, 1);\n                            }\n                        }\n                        }\n                    }\n                />\n            }\n            label={brand}\n        />\n    )\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Typography gutterBottom>Mærke</Typography>\n                    {checkBoxArray}\n\n                    <Typography gutterBottom>Navn</Typography>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            aria-label=\"Default\"\n                            aria-describedby=\"inputGroup-sizing-default\"\n                            onChange={ (e) => vehicleStore.searchName = e.target.value}\n                        />\n                    </InputGroup>\n\n                    <Typography id=\"range-slider\" gutterBottom>Pris</Typography>\n                    <Slider\n                        value={value}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        onChange={sliderChange}\n                        aria-valuemax={1000000}\n                        aria-valuemin={10}\n                    />\n\n                    <Typography gutterBottom>Max vægt</Typography>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            aria-label=\"Default\"\n                            aria-describedby=\"inputGroup-sizing-default\"\n                            onChange={(e) => vehicleStore.searchWeight = e.target.value}\n                        />\n                        <InputGroup.Append>\n                            <InputGroup.Text id=\"basic-addon2\">kg.</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n\n                    <Typography gutterBottom>Max rækkevidde</Typography>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            aria-label=\"Default\"\n                            aria-describedby=\"inputGroup-sizing-default\"\n                            onChange={(e) => vehicleStore.searchRange = e.target.value}\n                        />\n                        <InputGroup.Append>\n                            <InputGroup.Text id=\"basic-addon2\">km.</InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n\n                </Col>\n                <Col xs={8}>{vehicleStore.filteredVehicles.map(vehicle =>\n                        /*Here should be a filter to only insert the cards passing the filter into the cardArray*/\n                        <CarCard Car={vehicle}/>\n                )}</Col>\n            </Row>\n        </Container>\n    )\n})","import React from \"react\";\nimport {observer} from \"mobx-react\";\n\nexport const Profile = observer(()=>{\n    return(\n        <h1>Her vil dine profil indstillinger blive vist</h1>\n    )\n})","import React from 'react';\nimport {observer} from \"mobx-react\";\nimport {Switch} from \"react-router\";\nimport {Route} from \"react-router-dom\"\nimport './App.css';\nimport {CreateVehicle} from \"./components/CreateVehicle\";\nimport {CreateUser} from \"./components/CreateUser\";\nimport {CustomNavBar} from \"./components/CustomNavBar\";\nimport {LogIn} from \"./components/Login\";\nimport {SearchVehicleNew} from \"./components/SearchVehicleNew\";\nimport Container from \"react-bootstrap/Container\";\nimport {Profile} from \"./components/Profile\";\n\nfunction App() {\n    return (\n        <Container>\n            <CustomNavBar/>\n                <Switch>\n                    <Route exact path={\"/login\"} component={LogIn}/>\n                    <Route exact path={\"/search\"} component={SearchVehicleNew}/>\n                    <Route exact path={\"/create/vehicle\"} component={CreateVehicle}/>\n                    <Route exact path={\"/create/user\"} component={CreateUser}/>\n                    <Route exact path={\"/profile\"} component={Profile}/>\n                    <Route exact path={\"/\"} component={SearchVehicleNew}/>\n                    <Route render={() => <h1>404</h1>}/>\n                </Switch>\n        </Container>\n    );\n}\n\nexport default observer(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}