{"version":3,"sources":["stores/VehicleStore.js","App.js","serviceWorker.js","index.js"],"names":["VehicleStore","vehicles","brand","name","price","newBrand","newName","newPrice","decorate","observable","vehicleStore","SearchVehicle","columns","dataField","text","sort","filter","textFilter","headerFormatter","priceFormatter","keyField","data","filterFactory","defaultSorted","order","column","colIndex","sortElement","filterElement","style","display","flexDirection","UserInfo","CreateVehicle","observer","InputGroup","className","Prepend","Text","id","FormControl","aria-label","aria-describedby","value","onChange","e","target","onClick","push","NavTabs","defaultActiveKey","eventKey","title","AdminNavTabs","withRouter","history","match","console","log","Admin","src","alt","Switch","Route","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fc57727.chunk.js","sourcesContent":["import {decorate, observable} from \"mobx\";\n\nexport default class VehicleStore{\n    vehicles = [{brand: \"Volvo\", name: \"5-53x\", price: \"2500001\"},\n        {brand: \"Suzuki\", name: \"Swift\", price: \"1503000\"},\n        {brand: \"Mercedes\", name: \"Stor-20\", price: \"35900000\"}\n    ];\n    newBrand = \"\";\n    newName = \"\";\n    newPrice = \"\";\n}\n\ndecorate(VehicleStore,{\n    vehicles: observable,\n    newBrand: observable,\n    newName: observable,\n    newPrice: observable\n});","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {observer} from \"mobx-react\";\nimport Switch from \"react-router-dom/es/Switch\";\nimport Route from \"react-router-dom/es/Route\";\nimport {withRouter} from \"react-router\";\nimport Form from \"react-bootstrap/Form\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport VehicleStore from \"./stores/VehicleStore\";\nimport './App.css';\nimport {Link} from \"react-router-dom\";\nimport {FormControl, InputGroup} from \"react-bootstrap\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n\nconst vehicleStore = new VehicleStore();\n\nfunction SearchVehicle() {\n    const columns = [{\n        dataField: 'brand',\n        text: 'Vehicle Brand',\n        sort: true,\n        filter: textFilter(),\n        headerFormatter: priceFormatter\n    }, {\n        dataField: 'name',\n        text: 'Vehicle Name',\n        sort: true,\n        filter: textFilter(),\n        headerFormatter: priceFormatter\n    }, {\n        dataField: 'price',\n        text: 'Vehicle Price',\n        sort: true,\n        filter: textFilter(),\n        headerFormatter: priceFormatter\n    }];\n    const defaultSorted = [{\n        dataField: 'name',\n        order: 'desc'\n    }];\n\n    return (\n        <BootstrapTable\n            keyField=\"id\"\n            data={ vehicleStore.vehicles }\n            columns={ columns }\n            filter={ filterFactory() }\n            defaultSorted={ defaultSorted }\n        />\n    );\n\n}\n\nfunction priceFormatter(column, colIndex, { sortElement, filterElement }) {\n    return (\n        <div style={ { display: 'flex', flexDirection: 'column' } }>\n            { filterElement }\n            { column.text }\n            { sortElement }\n        </div>\n    );\n}\n\nfunction NewVehicle() {\n    return (\n        <Form>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"name@example.com\"/>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Example select</Form.Label>\n                <Form.Control as=\"select\">\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                <Form.Label>Example multiple select</Form.Label>\n                <Form.Control as=\"select\" multiple>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Example textarea</Form.Label>\n                <Form.Control as=\"textarea\" rows=\"3\"/>\n            </Form.Group>\n        </Form>\n    );\n}\n\nfunction UserInfo() {\n    return (\n        <section>\n\n\n        </section>\n    );\n}\n\nfunction LogIn() {\n    return (\n        <section>\n            <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">email</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    aria-label=\"Default\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                />\n            </InputGroup>\n            <br/>\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">password</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    aria-label=\"Default\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                />\n            </InputGroup>\n        </section>\n    );\n}\n\nfunction CreateUser() {\n    return (\n        <section>\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroup-sizing-default\">Default</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    aria-label=\"Default\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                />\n            </InputGroup>\n            <br/>\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                    placeholder=\"Recipient's username\"\n                    aria-label=\"Recipient's username\"\n                    aria-describedby=\"basic-addon2\"\n                />\n                <InputGroup.Append>\n                    <InputGroup.Text id=\"basic-addon2\">@example.com</InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup>\n        </section>\n    );\n}\n\nconst CreateVehicle =observer(()=>{\n    return (\n        <section>\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"vehicleBrand\">Brand</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    aria-label=\"Brand\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                    value = {vehicleStore.newBrand} onChange={(e)=>vehicleStore.newBrand=e.target.value}\n                />\n            </InputGroup>\n            <br />\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"vehicleName\">Name</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    aria-label=\"Name\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                    value = {vehicleStore.newName}  onChange={(e)=>vehicleStore.newName=e.target.value}\n                />\n            </InputGroup>\n            <br />\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"vehiclePrice\">Price</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    aria-label=\"Price\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                    value = {vehicleStore.newPrice} onChange={(e)=>vehicleStore.newPrice=e.target.value}\n                />\n            </InputGroup>\n            <Button onClick={() => vehicleStore.vehicles.push({brand:vehicleStore.newBrand,name:vehicleStore.newName,price:vehicleStore.newPrice})}>Opret Køretøj</Button>\n        </section>\n    );\n})\n\nfunction NavTabs() {\n    return (\n        <Tabs defaultActiveKey=\"search\" id=\"uncontrolled-tab-example\">\n            <Tab eventKey=\"search\" title=\"Søg køretøj\">\n\n                <SearchVehicle/>\n            </Tab>\n            <Tab eventKey=\"profile\" title=\"Profil\">\n                <UserInfo/>\n            </Tab>\n        </Tabs>\n    );\n}\n\nconst AdminNavTabs = observer( ()=> {\n    return (\n        <section>\n            <Tabs defaultActiveKey=\"create\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"create\" title=\"Opret nyt køretøj\">\n                    <CreateVehicle/>\n                </Tab>\n            </Tabs>\n        </section>\n    );\n});\n\nfunction App() {\n    return (\n        <div>\n            <container>\n                <img src=\"https://i.imgur.com/bVMYcYR.png\" className=\"Logo\" alt=\"NoFoss Logo\"/>\n            </container>\n            <container>\n\n                <Switch>\n                    <Route exact path={\"/admin\"} component={Admin}/>\n                    <Route exact path={\"/\"} render={() => <NavTabs/>}/>\n                    <Route render={() => <h1>404</h1>}/>\n                </Switch>\n            </container>\n        </div>\n    );\n}\n\n/* add to history TODO: fix - Ask Christian*/\nconst handleSelect = withRouter(({history, match}) => {\n    console.log(history);\n    console.log(match);\n    history.push('/' + match.text)\n});\n\nconst Admin = observer(withRouter(({history, match}) => {\n    console.log(history);\n    console.log(match);\n    return <div>\n        <AdminNavTabs/>\n        <Button onClick={() => history.push(\"/\")}>Ud af Admin</Button>\n    </div>\n}));\n\nexport default observer(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}