{"version":3,"sources":["stores/UserStore.js","stores/Agent.js","stores/VehicleStore.js","components/CreateVehicle.js","components/Login.js","components/CreateUser.js","components/CustomNavBar.js","components/CarCardAdmin.js","components/SearchVehicle.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["UserStore","loginData","username","password","loginStates","LOGGING_IN","LOGGED_OUT","LOGGED_IN","token","window","localStorage","getItem","newFirm","newFirstName","newLastName","newEmail","newPasswordOne","newpasswordtow","newHashPass","adminNavBar","href","name","state","this","startTokenCheck","agent","doLogin","splitToken","split","parse","JSON","atob","timeOut","Date","exp","timer","setTimeout","clear","toast","warn","decorate","observable","hashPass","userStore","email","fetch","baseUrl","method","body","stringify","headers","then","response","text","setItem","catch","status","nameFirst","nameLast","firm","Authorization","json","vehicles","map","vehicle","vehicleStore","push","_id","brand","model","fuelType","maxWeight","weight","maxRange","range","price","imageLink","e","console","log","newBrand","newModel","newFuelType","newMaxWeight","newMaxRange","newPrice","newImageLink","vehicleID","VehicleStore","brands","selectedBrands","selectedFuelTypes","searchModel","searchMinWeight","searchMaxWeight","searchMinRange","searchMaxRange","doVehicleFetch","filter","deleteVehicle","length","includes","toLowerCase","Number","filteredVehicles","computed","CreateVehicle","observer","useState","show1","setShow1","show2","setShow2","opretKøretøj","createVehicle","Container","Row","Col","md","span","offset","style","background","padding","border","borderColor","borderRadius","InputGroup","className","FormControl","aria-label","aria-describedby","value","onChange","target","Button","onClick","width","Toast","onClose","show","delay","autohide","Header","Body","LogIn","responseGoogle","w3","U3","doGoogleLogin","accessToken","id","type","color","paddingTop","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isVertified","CreateUser","withRouter","history","createNewUser","createUser","location","replace","sitekey","render","onloadCallback","verifyCallback","CustomNavBar","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Brand","element","Link","src","alt","CarCardAdmin","Car","Card","SearchVehicle","React","Volvo","Mercedes","Ford","brandBoxArray","key","FormControlLabel","control","checked","index","indexOf","splice","label","fuelBoxArray","gutterBottom","Append","Text","xs","overflow","Profile","exact","path","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0fe32f87.chunk.js","sourcesContent":["import Agent, {agent} from \"./Agent\";\nimport {decorate, observable} from \"mobx\";\nimport {toast} from 'react-toastify';\n\n\nclass UserStore{\n    currentUser;\n\n    loginData={username:\"\",password:\"\"};\n    loginStates = {LOGGING_IN:\"loading\", LOGGED_OUT:\"logout\", LOGGED_IN:\"LoggedIn\"};\n    token = window.localStorage.getItem(\"NofossToken\");\n    constructor(){\n        //let nofossToken = localStorage.getItem(\"NofossToken\");\n        if (this.token){\n            this.state = this.loginStates.LOGGED_IN;\n        }\n        this.startTokenCheck();\n    }\n\n    newFirm = \"\";\n    newFirstName = \"\";\n    newLastName = \"\";\n    newEmail = \"\";\n    newPasswordOne = \"\";\n    newpasswordtow = \"\";\n    newHashPass =\"\";\n\n    adminNavBar = [\n        {href:\"#/search\",name:\"Søg køretøj\"},\n        {href:\"#/create/vehicle\",name:\"Opret køretøj\"},\n        {href:\"#/profile\",name:\"Profil\"}];\n\n    state = this.loginStates.LOGGED_OUT;\n\n    doLogin(){\n        agent.doLogin(this.loginData);\n    }\n\n    startTokenCheck() {\n        if(!this.token) return;\n        let splitToken = this.token.split(\".\")[1];\n        let parse = JSON.parse(window.atob(splitToken));\n        let exp = new Date(parse.exp * 1000);\n        const now = new Date();\n        let timeOut = (exp - now) - 10000;\n        this.timer = setTimeout(()=>{\n            localStorage.clear();\n            this.token = null;\n            this.state=this.loginStates.LOGGED_OUT;\n            toast.warn(\"Dit login er udløbet. Log ind igen\");\n        }, timeOut)\n    }\n}\n\ndecorate(UserStore,{\n    state:observable,\n    loginData: observable,\n    newFirm: observable,\n    newFirstName: observable,\n    newLastName: observable,\n    newEmail: observable,\n    newPasswordOne: observable,\n    newpasswordtow: observable,\n    hashPass: observable\n});\n\nexport const userStore = new UserStore();","import {userStore} from \"./UserStore\";\nimport {vehicleStore} from \"./VehicleStore\";\n\nconst baseUrl = process.env.NODE_ENV === 'development' ? \"http://localhost:8080/rest/\" : \"rest/\"; //Check if dev\n\n\nclass Agent {\n\n    doGoogleLogin(token, email) {\n        fetch(baseUrl + \"loginGoogle\", {\n            method: \"POST\",\n            body: JSON.stringify(token),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(\n            (response) => {\n                response.text().then((text) => {\n                    if (JSON.parse(text) === 200) {\n                        fetch(baseUrl + \"loginGoogle/getToken\", {\n                            method: \"POST\",\n                            body: JSON.stringify(email),\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            }\n                        }).then(\n                            (response) => {\n                                response.text().then(\n                                    (token) => {\n                                        userStore.token = token;\n                                        localStorage.setItem(\"NofossToken\", token);\n                                        userStore.state = userStore.loginStates.LOGGED_IN;\n                                        userStore.startTokenCheck();\n                                    })\n                            })\n                    } else {\n\n                    }\n                })\n            }\n        ).catch(() => userStore.state = userStore.loginStates.LOGGED_OUT);\n    }\n\n     doLogin(loginData) {\n        userStore.state = userStore.loginStates.LOGGING_IN;\n        fetch(baseUrl + \"user/login\", {\n            method: \"POST\",\n            body: JSON.stringify(loginData),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(\n            (response) => {\n                if (response.status === 200) {\n                    response.text().then(\n                        (token) => {\n                            userStore.token = token;\n                            localStorage.setItem(\"NofossToken\", token);\n                            userStore.state = userStore.loginStates.LOGGED_IN;\n                            userStore.startTokenCheck();\n                        }\n                    )\n                }else if(response.status === 401){\n\n                }\n            }\n        ).catch(() => userStore.state = userStore.loginStates.LOGGED_OUT);\n    }\n\n    async createUser() {\n        fetch(baseUrl + \"user\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                nameFirst: userStore.newFirstName,\n                nameLast: userStore.newLastName,\n                firm: userStore.newFirm,\n                email: userStore.newEmail,\n                password/*måske dumt?*/ : userStore.newPasswordOne\n            })\n        }).catch(() => this.state = userStore.loginStates.LOGGED_OUT);\n    }\n\n    async doVehicleFetch() {\n        await fetch(baseUrl + \"mongo\", {\n            method: \"GET\",\n            headers: {\n                Authorization: \"Bearer \" + userStore.token\n            }\n        }).then(\n            (response) => {\n                if(response.status===200){\n                response.json()\n                    .then((vehicles) => {\n                        vehicles.map(vehicle => vehicleStore.vehicles.push({\n                            _id: vehicle._id,\n                            brand: vehicle.brand,\n                            model: vehicle.name,\n                            fuelType: vehicle.fuelType,\n                            maxWeight: vehicle.weight,\n                            maxRange: vehicle.range,\n                            price: vehicle.price,\n                            imageLink: vehicle.imageLink\n                        }))\n                    });\n            }else if(response.status===404){\n                    \n                }\n            }\n        ).catch(e => console.log(e));\n    }\n\n    async createVehicle() {\n        await fetch(baseUrl + \"mongo\", {\n            method: \"POST\",\n            headers: {\n                Authorization: \"Bearer \" + userStore.token\n            },\n            body: JSON.stringify({\n                brand: vehicleStore.newBrand,\n                name: vehicleStore.newModel,\n                fuelType: vehicleStore.newFuelType,\n                weight: vehicleStore.newMaxWeight,\n                range: vehicleStore.newMaxRange,\n                price: vehicleStore.newPrice,\n                imageLink: vehicleStore.newImageLink\n            })\n        })\n    }\n\n    async deleteVehicle(vehicleID) {\n        await fetch(baseUrl + \"mongo/\" + vehicleID, {\n            method: \"DELETE\",\n            headers: {\n                Authorization: \"Bearer \" + userStore.token\n            }\n        })\n    }\n}\n\n\n\nexport const agent = new Agent();","import {computed, decorate, observable} from \"mobx\";\nimport {agent} from \"../stores/Agent\";\n\nclass VehicleStore{\n\n    constructor() {\n        agent.doVehicleFetch()\n    }\n\n    response;\n    vehicles = [];\n    brands = [\"Volvo\", \"Renault\", \"Iveco\",\"Scania\"];\n    fuelType = [\"Gas\", \"El\"];\n\n    newBrand = \"\";\n    newModel = \"\";\n    newPrice = \"\";\n    newMaxWeight = \"\";\n    newMaxRange = \"\";\n    newFuelType = \"\";\n    newImageLink = \"\";\n\n    selectedBrands = [\"\"];\n    selectedFuelTypes = [\"\"];\n    searchModel = \"\";\n    searchMinWeight = 0.0;\n    searchMaxWeight = 0.0;\n    searchMinRange = 0.0;\n    searchMaxRange = 0.0;\n\n    get filteredVehicles(){\n        return vehicleStore.vehicles.filter(vehicle =>\n                ((this.selectedBrands.length <=1 || this.selectedBrands.includes(vehicle.brand))\n                    && (this.selectedFuelTypes.length <=1 || this.selectedFuelTypes.includes(vehicle.fuelType))\n                    && vehicle.model.toLowerCase().includes(this.searchModel.toLowerCase())\n                    && ((this.searchMinWeight === 0.0) || Number(vehicle.maxWeight) >= Number(this.searchMinWeight))\n                    && ((this.searchMaxWeight === 0.0) || Number(vehicle.maxWeight) <= Number(this.searchMaxWeight))\n                    && ((this.searchMinRange === 0.0) || Number(vehicle.maxRange) >= Number(this.searchMinRange))\n                    && ((this.searchMaxRange === 0.0) || Number(vehicle.maxRange) <= Number(this.searchMaxRange)))\n            )\n    }\n\n    deleteVehicle(vehicleID){\n        this.vehicles=this.vehicles.filter(vehicle => vehicle._id!==vehicleID)\n        agent.deleteVehicle(vehicleID)\n    }\n\n}\n\ndecorate(VehicleStore,{\n    vehicles: observable,\n    newBrand: observable,\n    newModel: observable,\n    newPrice: observable,\n    newMaxWeight: observable,\n    newMaxRange: observable,\n    newFuelType: observable,\n    newImageLink: observable,\n    selectedBrands: observable,\n    selectedFuelTypes: observable,\n    searchModel: observable,\n    searchMinWeight: observable,\n    searchMaxWeight: observable,\n    searchMinRange: observable,\n    searchMaxRange: observable,\n    filteredVehicles: computed,\n});\n\nexport const vehicleStore = new VehicleStore();","import {observer} from \"mobx-react\";\nimport {Col, Container, FormControl, InputGroup, Row, Toast} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport React, {useState} from \"react\";\nimport {vehicleStore} from \"../stores/VehicleStore\";\nimport {agent} from \"../stores/Agent\";\n\nexport const CreateVehicle = observer(() => {\n    const [show1, setShow1] = useState(false);\n    const [show2, setShow2] = useState(false);\n\n    function clean() {\n        vehicleStore.newBrand = \"\";\n        vehicleStore.newModel = \"\";\n        vehicleStore.newFuelType = \"\";\n        vehicleStore.newMaxWeight = \"\";\n        vehicleStore.newMaxRange = \"\";\n        vehicleStore.newPrice =\"\";\n        vehicleStore.newImageLink=\"\";\n    }\n\n    function opretKøretøj() {\n        if(vehicleStore.newBrand !== \"\"\n            && vehicleStore.newModel !== \"\"\n            && vehicleStore.newFuelType !== \"\"\n            && vehicleStore.newMaxWeight !== \"\"\n            && vehicleStore.newMaxRange !== \"\"\n            && vehicleStore.newPrice !==\"\"\n            && vehicleStore.newImageLink !==\"\") {\n\n            vehicleStore.vehicles.push({\n                brand: vehicleStore.newBrand,\n                model: vehicleStore.newModel,\n                fuelType: vehicleStore.newFuelType,\n                maxWeight: vehicleStore.newMaxWeight,\n                maxRange: vehicleStore.newMaxRange,\n                price: vehicleStore.newPrice,\n                imageLink: vehicleStore.newImageLink\n            });\n            agent.createVehicle()\n            clean();\n            setShow1(true)\n        }else {\n            setShow2(true)\n        }\n    }\n\n    return (\n        <div>\n            <Container>\n                <Row><Col md={{span: 6, offset: 3}}\n                          style={{\n                              background: '#fff',\n                              padding: '20pt',\n                              border: '1px solid',\n                              borderColor: '#d8dee2',\n                              borderRadius: \"5pt\"\n                          }}>\n\n                    <Container>\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Mærke</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newBrand}\n                                    onChange={(e) => vehicleStore.newBrand = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Model navn / nr.</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newModel}\n                                    onChange={(e) => vehicleStore.newModel = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Drivmiddel</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newFuelType}\n                                    onChange={(e) => vehicleStore.newFuelType = e.target.value}\n\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Max vægt</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newMaxWeight}\n                                    onChange={(e) => vehicleStore.newMaxWeight = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Max rækkevidde</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newMaxRange}\n                                    onChange={(e) => vehicleStore.newMaxRange = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Pris</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newPrice}\n                                    onChange={(e) => vehicleStore.newPrice = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Link til billede</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newImageLink}\n                                    onChange={(e) => vehicleStore.newImageLink = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <Button onClick={() => {opretKøretøj()}}\n                                    style={{\n                                width: '100%',\n                                background: '#637724',\n                                borderColor: '#637724'\n                            }}>Opret Køretøj</Button>\n                        </Col></Row>\n                    </Container>\n                </Col>\n\n                    <Col md={{span: 3, offset: 0}}>\n                        <Toast onClose={() => setShow1(false)} show={show1} delay={3000} autohide>\n                            <Toast.Header>\n                                <strong className=\"mr-auto\">Nofoss</strong>\n                            </Toast.Header>\n                            <Toast.Body>Køretøj oprettet</Toast.Body>\n                        </Toast>\n\n                        <Toast onClose={() => setShow2(false)} show={show2} delay={3000} autohide>\n                            <Toast.Header>\n                                <strong className=\"mr-auto\">Nofoss</strong>\n                            </Toast.Header>\n                            <Toast.Body>Alle felter skal være udfyldt</Toast.Body>\n                        </Toast>\n                    </Col>\n\n                </Row>\n            </Container>\n        </div>\n    );\n})\n","import {observer} from \"mobx-react\";\nimport {Col, FormControl, InputGroup, Row, Toast} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport {Link} from \"react-router-dom\";\nimport {CreateUser} from \"./CreateUser\";\nimport Container from \"react-bootstrap/Container\";\nimport {userStore} from \"../stores/UserStore\";\nimport GoogleLogin from 'react-google-login';\nimport GoogleButton from 'react-google-login';\nimport {agent} from \"../stores/Agent\";\nimport React, {useState} from \"react\";\nimport {vehicleStore} from \"../stores/VehicleStore\";\n\nexport const LogIn = observer( () => {\n    const [show1, setShow1] = useState(false);\n    const [show2, setShow2] = useState(false);\n\n    function login() {\n        if(userStore.loginData.username !== \"\"\n        && userStore.loginData.password !== \"\") {\n            userStore.doLogin();\n            if (userStore.state !== userStore.loginStates.LOGGED_IN && userStore.state !== userStore.loginStates.LOGGING_IN){\n                console.log((userStore.state));\n                userStore.loginData.password = \"\";\n                setShow1(true);\n            }\n        }else{\n            setShow2(true);\n        }\n    }\n\n    const responseGoogle = (response) => {\n        if(response.w3.U3){\n            agent.doGoogleLogin(response.accessToken, response.w3.U3)\n        }\n    };\n    return (\n        <div>\n            <Container>\n                <Row><Col md={{span: 6, offset: 3}} style={{\n                    background: '#fff',\n                    padding: '20pt',\n                    border: '1px solid',\n                    borderColor: '#d8dee2',\n                    borderRadius: \"5pt\"\n                }}>\n                    <Container>\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Email</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={userStore.loginData.username}\n                                    onChange={(e) => userStore.loginData.username = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Password</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    id=\"passwordText\"\n                                    type=\"password\"\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={userStore.loginData.password}\n                                    onChange={(e) => userStore.loginData.password = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row>\n                            <Col md={{span: 5, offset: 1}}>\n                                <Button onClick={login} style={{\n                                    width: '100%',\n                                    background:'#637724',\n                                    borderColor:'#637724'\n                                }}>Login</Button>\n                            </Col>\n                            <Col md={{span: 5, offset: 0}}>\n                                <Button href=\"#/create/User\"\n                                        style={{\n                                    width: '100%',\n                                    background: '#fff',\n                                    border: '1px solid',\n                                    borderColor: '#637724',\n                                    color:'#637724'\n                                }}>Opret bruger</Button >\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={{span: 5, offset: 1}}\n                                 style={{\n                                     paddingTop: '5pt'}}>\n                                <GoogleLogin\n                                    clientId=\"535992274215-0i5rm3il5tt76ds4k3a6048pjocvcmob.apps.googleusercontent.com\"\n                                    buttonText=\"Login med Google\"\n                                    onSuccess={responseGoogle}\n                                    onFailure={responseGoogle}\n                                    cookiePolicy={'single_host_origin'\n                                    }/>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Col>\n                    <Col><Toast onClose={() => setShow1(false)} show={show1} delay={3000} autohide>\n                        <Toast.Header>\n                            <strong className=\"mr-auto\">Nofoss</strong>\n                        </Toast.Header>\n                        <Toast.Body>Email og password stemmer ikke over ens</Toast.Body>\n                    </Toast>\n\n                    <Toast onClose={() => setShow2(false)} show={show2} delay={3000} autohide>\n                        <Toast.Header>\n                            <strong className=\"mr-auto\">Nofoss</strong>\n                        </Toast.Header>\n                        <Toast.Body>Alle felter skal være udfyldt</Toast.Body>\n                    </Toast></Col></Row>\n            </Container>\n        </div>\n    )\n});\n\n","import {Col, FormControl, InputGroup, Row, Toast} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport {userStore} from \"../stores/UserStore\";\nimport {observer} from \"mobx-react\";\nimport {agent} from \"../stores/Agent\";\nimport Recaptcha from 'react-recaptcha';\nimport {vehicleStore} from \"../stores/VehicleStore\";\nimport {Route, withRouter} from \"react-router\";\nimport {LogIn} from \"./Login\";\n\n//const passwordHash = require('password-hash');\nlet isVertified = false;\nexport const CreateUser = withRouter( observer((history)=> {\n    const [show1, setShow1] = useState(false);\n    const [show2, setShow2] = useState(false);\n\n    function verifyCallback(response) {\n        if(response){\n            isVertified = true;\n        }\n    }\n\n    function callback () {\n        console.log('Done');\n    }\n\n    function clean() {\n        userStore.newFirm = \"\";\n        userStore.newFirstName = \"\";\n        userStore.newLastName = \"\";\n        userStore.newEmail = \"\";\n        userStore.newPasswordOne = \"\";\n        userStore.newpasswordtow =\"\";\n    }\n\n    function createNewUser() {\n        if(userStore.newFirm !== \"\"\n        && userStore.newFirstName !== \"\"\n        && userStore.newLastName !==\"\"\n        && userStore.newEmail !== \"\"\n        && userStore.newPasswordOne !== \"\"\n        && userStore.newpasswordtow !== \"\"\n        && isVertified) {\n\n            //const hashPass = passwordHash.generate(password);\n            if (identcal()) {\n                //userStore.newHashPass = hashPass;\n                agent.createUser();\n                clean();\n                window.location.replace(\"/\")\n            } else {\n                setShow1(true)\n            }\n        }else{\n            setShow2(true)\n        }\n    }\n\n    function identcal() { return userStore.newpasswordtow === userStore.newPasswordOne; }\n\n    return (\n        <div >\n            <Container>\n                <Row><Col md={{span: 6, offset: 3}} style={{\n                    background: '#fff',\n                    padding: '20pt',\n                    border: '1px solid',\n                    borderColor: '#d8dee2',\n                    borderRadius: \"5pt\"\n                }}>\n                    <Container>\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Firma</text>\n                            <InputGroup id=\"test\" className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={userStore.newFirm}\n                                    onChange={(e) => userStore.newFirm = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Fornavn</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={userStore.newFirstName}\n                                    onChange={(e)=> userStore.newFirstName = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Efternavn</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={userStore.newLastName}\n                                onChange={(e)=> userStore.newLastName = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Email</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    type=\"email\"\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={userStore.newEmail}\n                                    onChange={(e)=> userStore.newEmail = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Password</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    type=\"password\"\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={userStore.newPasswordOne}\n                                    onChange={(e)=> userStore.newPasswordOne = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Gentag password</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    type=\"password\"\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={userStore.newpasswordtow}\n                                    onChange={(e)=> userStore.newpasswordtow = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <Button\n                                onClick={()=>createNewUser()}\n                                style={{\n                                width: '100%',\n                                background:'#637724',\n                                borderColor:'#637724'\n                            }}>Opret bruger</Button>\n                        </Col></Row>\n                        <Row>\n                        <Col md={{span: 10, offset: 1}}>\n                            <Recaptcha\n                                sitekey=\"6LcaJsYUAAAAAHQ7cbFSBUjwcd3MyuDStYbHF6CX\"\n                                render=\"explicit\"\n                                onloadCallback={callback}\n                                verifyCallback={verifyCallback}\n                            />\n                        </Col></Row>\n                    </Container>\n                </Col>\n                    <Col md={{span: 3, offset: 0}}>\n                        <Toast onClose={() => setShow1(false)} show={show1} delay={3000} autohide>\n                            <Toast.Header>\n                                <strong className=\"mr-auto\">Nofoss</strong>\n                            </Toast.Header>\n                            <Toast.Body>Password er ikke ens</Toast.Body>\n                        </Toast>\n\n                        <Toast onClose={() => setShow2(false)} show={show2} delay={3000} autohide>\n                            <Toast.Header>\n                                <strong className=\"mr-auto\">Nofoss</strong>\n                            </Toast.Header>\n                            <Toast.Body>Alle felter skal være udfyldt</Toast.Body>\n                        </Toast>\n                    </Col> </Row>\n            </Container>\n        </div>\n    );\n}));","import {observer} from \"mobx-react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport React from \"react\";\nimport {userStore} from \"../stores/UserStore\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\n\nexport const CustomNavBar = observer(() => {\n    return (\n        <Container>\n            <Row>\n                <Col md={{span: 8, offset: 0}}>\n                    <Navbar bg=\"light\" expand=\"lg\">\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n                                <Navbar.Brand href={'#/search'}>Nofoss</Navbar.Brand>\n                                {userStore.adminNavBar.map((element) => <Nav.Link href={element.href}>{element.name}</Nav.Link>)}\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </Col>\n                <Col md={{span: 4, offset:0}} className=\"d-none d-lg-block\">\n                    <img src=\"https://i.imgur.com/bVMYcYR.png\" className=\"Logo\" alt=\"NoFoss Logo\"/>\n                </Col>\n            </Row>\n        </Container>\n\n    );\n});","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport {Col, Row} from \"react-bootstrap\";\nimport {vehicleStore} from \"../stores/VehicleStore\";\n\nexport function CarCardAdmin({Car}) {\n    const {model,brand,price,fuelType,maxWeight,maxRange,imageLink,_id} = Car\n    const id = \"testID\" //CHANGE THIS\n    function deleteCar(){\n        vehicleStore.deleteVehicle(_id)\n    }\n\n    return (\n        <Card>\n            <Row>\n                <Col md={{span: 4, offset: 0}}>\n                    <Card.Header>{brand} - {model}</Card.Header>\n                    <Card.Body>\n                        <img style={{width: '100%'}} src={imageLink} alt=\"Billede af bil\"/>\n                    </Card.Body>\n                </Col>\n                <Col>\n                    <Card.Body>\n                        Pris: {price} kr.\n                        <br/>\n                        Totalvægt: {maxWeight} kg.\n                        <br/>\n                        Total rækkevidde: {maxRange} km.\n                        <br/>\n                        Brændstof: {fuelType}.\n                        <br/>\n                        <button type=\"button\" onClick={deleteCar} className=\"btn btn-danger\">SLET KØRETØJ</button>\n                    </Card.Body>\n                </Col>\n            </Row>\n        </Card>\n    )\n}","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {vehicleStore} from \"../stores/VehicleStore\";\nimport {CarCard} from \"./CarCard\";\nimport {CarCardAdmin} from \"./CarCardAdmin\";\nimport {FormControl, InputGroup} from \"react-bootstrap\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {observer} from \"mobx-react\";\n\nexport const SearchVehicle = observer(() => {\n\n    /*Contains checkbox boolean setting TODO: implement these with brandArray*/\n    const [state, setState] = React.useState({\n        Volvo: true,\n        Mercedes: true,\n        Ford: true\n    });\n\n    const checkboxChange = name => event => {\n        setState({...state, [name]: event.target.checked});\n    };\n\n    const brandBoxArray = vehicleStore.brands.map((brand, key) =>\n        <FormControlLabel key={key}\n                          control={\n                              <Checkbox\n                                  //checked={true}\n                                  //onChange={checkboxChange(brand)}\n                                  value={brand}\n                                  onChange={(e) => {\n                                      if (e.target.checked) {\n                                          vehicleStore.selectedBrands.push(brand)\n                                      } else {\n                                          var index = vehicleStore.selectedBrands.indexOf(e.target.value);\n                                          if (index > -1) {\n                                              vehicleStore.selectedBrands.splice(index, 1);\n                                          }\n                                      }\n                                  }\n                                  }\n                              />\n                          }\n                          label={brand}\n        />\n    )\n\n    const fuelBoxArray = vehicleStore.fuelType.map((brand, key) =>\n        <FormControlLabel key={key}\n                          control={\n                              <Checkbox\n                                  //checked={true}\n                                  //onChange={checkboxChange(brand)}\n                                  value={brand}\n                                  onChange={(e) => {\n                                      if (e.target.checked) {\n                                          vehicleStore.selectedFuelTypes.push(brand)\n                                      } else {\n                                          var index = vehicleStore.selectedFuelTypes.indexOf(e.target.value);\n                                          if (index > -1) {\n                                              vehicleStore.selectedFuelTypes.splice(index, 1);\n                                          }\n                                      }\n                                  }\n                                  }\n                              />\n                          }\n                          label={brand}\n        />\n    )\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Typography gutterBottom>Mærke</Typography>\n                    <Row>\n                        {brandBoxArray}\n                    </Row>\n                    <Typography gutterBottom>Model</Typography>\n                    <Row>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl\n                                aria-label=\"Default\"\n                                aria-describedby=\"inputGroup-sizing-default\"\n                                onChange={(e) => vehicleStore.searchModel = e.target.value}\n                            />\n                        </InputGroup>\n                    </Row>\n\n                    <Typography gutterBottom>Vægt</Typography>\n                    <Row>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">min</InputGroup.Text>\n                                </InputGroup.Append>\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => vehicleStore.searchMinWeight = e.target.value}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">kg.</InputGroup.Text>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">max</InputGroup.Text>\n                                </InputGroup.Append>\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => vehicleStore.searchMaxWeight = e.target.value}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">kg.</InputGroup.Text>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n\n                    <Typography gutterBottom>Rækkevidde</Typography>\n                    <Row>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">min</InputGroup.Text>\n                                </InputGroup.Append>\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => vehicleStore.searchMinRange = e.target.value}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">km.</InputGroup.Text>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">max</InputGroup.Text>\n                                </InputGroup.Append>\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => vehicleStore.searchMaxRange = e.target.value}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">km.</InputGroup.Text>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                    <Typography gutterBottom>Drivmiddel</Typography>\n                    <Row>\n                        {fuelBoxArray}\n                    </Row>\n                </Col>\n                <Col xs={8} style={{overflow: 'scroll'}}>\n                        {vehicleStore.filteredVehicles.map(vehicle =>\n                            /*Here should be a filter to only insert the cards passing the filter into the cardArray*/\n                            <CarCardAdmin Car={vehicle}/>)}\n                </Col>\n            </Row>\n        </Container>\n    )\n})","import React from \"react\";\nimport {observer} from \"mobx-react\";\n\nexport const Profile = observer(()=>{\n    return(\n        <h1>Her vil dine profil indstillinger blive vist</h1>\n    )\n})","import React from 'react';\nimport {observer} from \"mobx-react\";\nimport {Switch} from \"react-router\";\nimport {Route} from \"react-router-dom\"\nimport './App.css';\nimport {CreateVehicle} from \"./components/CreateVehicle\";\nimport {CreateUser} from \"./components/CreateUser\";\nimport {CustomNavBar} from \"./components/CustomNavBar\";\nimport {LogIn} from \"./components/Login\";\nimport {SearchVehicle} from \"./components/SearchVehicle\";\nimport Container from \"react-bootstrap/Container\";\nimport {Profile} from \"./components/Profile\";\nimport {userStore} from \"./stores/UserStore\";\n\nfunction App() {\n    function setupApp() {\n        if(userStore.state !== userStore.loginStates.LOGGED_IN){\n            return (\n                <Container>\n                    <Switch>\n                        <Route exact path={\"/create/user\"} component={CreateUser}/>\n                        <Route render={() => <LogIn/>}/>\n                    </Switch>\n                </Container>\n            )\n        }else {\n            return (\n            <Container>\n                <CustomNavBar/>\n                <Switch>\n                        <Route exact path={\"/search\"} component={SearchVehicle}/>\n                        <Route exact path={\"/create/vehicle\"} component={CreateVehicle}/>\n                        <Route exact path={\"/profile\"} component={Profile}/>\n                        <Route exact path={\"/\"} component={SearchVehicle}/>\n                        <Route render={() => <h1>404 - page not found</h1>}/>\n                </Switch>\n            </Container>\n            )\n        }\n    }\n\n    return (\n       setupApp()\n    );\n}\n\nexport default observer(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}