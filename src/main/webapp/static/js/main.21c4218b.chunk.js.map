{"version":3,"sources":["stores/VehicleStore.js","components/CreateVehicle.js","components/CreateUser.js","stores/Agent.js","stores/UserStore.js","components/CustomNavBar.js","components/Login.js","components/CarCard.js","components/SearchVehicleNew.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["VehicleStore","brands","fuelType","vehicles","brand","name","price","maxWeight","maxRange","imageLink","newBrand","newName","newPrice","newMaxWeight","newMaxRange","newFuelType","newImageLink","selectedBrands","selectedFuelTypes","searchName","searchMinWeight","searchMaxWeight","searchMinRange","searchMaxRange","vehicleStore","filter","vehicle","length","includes","toLowerCase","Number","decorate","observable","filteredVehicles","computed","CreateVehicle","observer","Container","Row","Col","md","span","offset","style","background","padding","border","borderColor","borderRadius","InputGroup","className","FormControl","aria-label","aria-describedby","value","onChange","e","target","newWeight","newFuel","Button","onClick","push","width","CreateUser","agent","loginData","fetch","baseUrl","method","body","JSON","stringify","headers","then","response","text","token","userStore","localStorage","setItem","state","loginStates","LOGGED_IN","startTokenCheck","catch","LOGGED_OUT","Authorization","UserStore","LOGGING_IN","window","getItem","adminNavBar","href","username","password","this","doLogin","splitToken","split","parse","atob","timeOut","Date","exp","timer","setTimeout","clear","toast","warn","CustomNavBar","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","Brand","map","element","Link","src","alt","LogIn","type","login","color","CarCard","Car","Card","Header","Body","SearchVehicleNew","React","useState","Volvo","Mercedes","Ford","brandBoxArray","key","FormControlLabel","control","checked","console","log","index","indexOf","splice","label","fuelBoxArray","gutterBottom","Append","Text","xs","overflow","Profile","exact","path","component","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21c4218b.chunk.js","sourcesContent":["import {computed, decorate, observable} from \"mobx\";\n\nclass VehicleStore{\n    brands = [\"Volvo\", \"Renault\", \"Iveco\",\"Scania\"];\n    fuelType = [\"Gas\", \"El\"];\n    vehicles = [\n        {brand: 'Volvo', name: '5-53x', price: '550000', maxWeight: '40000', maxRange: '1000', fuelType: 'Gas', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Volvo', name: '6-63x', price: '500000', maxWeight: '27000', maxRange: '2000', fuelType: 'El', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Scania', name: '123', price: '450000', maxWeight: '40000', maxRange: '1000', fuelType: 'Gas', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Scania', name: '321', price: '350000', maxWeight: '27000', maxRange: '2000', fuelType: 'Gas', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Iveco', name: 'abc', price: '250000', maxWeight: '3500', maxRange: '750', fuelType: 'Gas', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Iveco', name: 'def', price: '300000', maxWeight: '7000', maxRange: '1400', fuelType: 'Gas', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Iveco', name: 'ghi', price: '400000', maxWeight: '40000', maxRange: '2000', fuelType: 'Gas', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Renault', name: 'lille', price: '300000', maxWeight: '2500', maxRange: '1000', fuelType: 'El', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n        {brand: 'Renault', name: 'Stor', price: '350000', maxWeight: '4000', maxRange: '1500', fuelType: 'El', imageLink: 'https://f.nordiskemedier.dk/2gvdpo4v0qz2xyeb.jpg'},\n    ];\n\n    newBrand = \"\";\n    newName = \"\";\n    newPrice = \"\";\n    newMaxWeight = \"\";\n    newMaxRange = \"\";\n    newFuelType = \"\";\n    newImageLink = \"\";\n\n    selectedBrands = [\"\"];\n    selectedFuelTypes = [\"\"];\n    searchName = \"\";\n    searchMinWeight = 0.0;\n    searchMaxWeight = 0.0;\n    searchMinRange = 0.0;\n    searchMaxRange = 0.0;\n\n    get filteredVehicles(){\n        return (\n            vehicleStore.vehicles.filter(vehicle =>\n                ((this.selectedBrands.length <=1 || this.selectedBrands.includes(vehicle.brand))\n                    && (this.selectedFuelTypes.length <=1 || this.selectedFuelTypes.includes(vehicle.fuelType))\n                    && vehicle.name.toLowerCase().includes(this.searchName.toLowerCase())\n                    && ((this.searchMinWeight === 0.0) || Number(vehicle.maxWeight) >= Number(this.searchMinWeight))\n                    && ((this.searchMaxWeight === 0.0) || Number(vehicle.maxWeight) <= Number(this.searchMaxWeight))\n                    && ((this.searchMinRange === 0.0) || Number(vehicle.maxRange) >= Number(this.searchMinRange))\n                    && ((this.searchMaxRange === 0.0) || Number(vehicle.maxRange) <= Number(this.searchMaxRange)))\n            )\n        )\n    }\n\n}\n\ndecorate(VehicleStore,{\n    vehicles: observable,\n    newBrand: observable,\n    newName: observable,\n    newPrice: observable,\n    newMaxWeight: observable,\n    newMaxRange: observable,\n    newFuelType: observable,\n    newImageLink: observable,\n    selectedBrands: observable,\n    selectedFuelTypes: observable,\n    searchName: observable,\n    searchMinWeight: observable,\n    searchMaxWeight: observable,\n    searchMinRange: observable,\n    searchMaxRange: observable,\n    filteredVehicles: computed,\n});\n\nexport const vehicleStore = new VehicleStore();","import {observer} from \"mobx-react\";\nimport {Col, Container, FormControl, InputGroup, Row} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport {vehicleStore} from \"../stores/VehicleStore\";\n\nexport const CreateVehicle = observer(() => {\n    return (\n        <div>\n            <Container>\n                <Row><Col md={{span: 6, offset: 3}}\n                          style={{\n                              background: '#fff',\n                              padding: '20pt',\n                              border: '1px solid',\n                              borderColor: '#d8dee2',\n                              borderRadius: \"5pt\"\n                          }}>\n                    <Container>\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Brand</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newBrand}\n                                    onChange={(e) => vehicleStore.newBrand = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Weight</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newWeight}\n                                    onChange={(e) => vehicleStore.newWeight = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Fuel</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    value={vehicleStore.newFuel} onChange={(e) => vehicleStore.newFuel = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <Button onClick={() => vehicleStore.vehicles.push({\n                                brand: vehicleStore.newBrand,\n                                name: vehicleStore.newWeight,\n                                price: vehicleStore.newFuel\n                            })} style={{\n                                width: '100%',\n                                background: '#637724',\n                                borderColor: '#637724'\n                            }}>Opret Køretøj</Button>\n                        </Col></Row>\n                    </Container>\n                </Col></Row>\n            </Container>\n        </div>\n\n\n    );\n})","import {Col, FormControl, InputGroup, Row} from \"react-bootstrap\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nexport function CreateUser() {\n    return (\n        <div >\n            <Container>\n                <Row><Col md={{span: 6, offset: 3}} style={{\n                    background: '#fff',\n                    padding: '20pt',\n                    border: '1px solid',\n                    borderColor: '#d8dee2',\n                    borderRadius: \"5pt\"\n                }}>\n\n\n                    <Container>\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Firm</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>First Name</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Last Name</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Email</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Password</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Password Confirm</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <Button style={{\n                                width: '100%',\n                                background:'#637724',\n                                borderColor:'#637724'\n                            }}>Opret bruger</Button>\n                        </Col></Row>\n                    </Container>\n\n                </Col></Row>\n            </Container>\n        </div>\n    );\n}","import {userStore} from \"./UserStore\";\n\nconst baseUrl = process.env.NODE_ENV === 'development' ?  \"http://localhost:8080/rest/\":\"rest/\"; //Check if dev\n\n\nclass Agent {\n    doLogin(loginData){\n        fetch(baseUrl +\"login\",{\n            method:\"POST\",\n            body:JSON.stringify(loginData),\n            headers:{\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(\n            (response)=> {\n                response.text().then(\n                    (token)=>{\n                        userStore.token=token;\n                        localStorage.setItem(\"NofossToken\",token);\n                        userStore.state = userStore.loginStates.LOGGED_IN;\n                        userStore.startTokenCheck();\n                    }\n                )\n            }\n        ).catch(()=> this.state = userStore.loginStates.LOGGED_OUT);\n    }\n\n    async getVehicles(){\n        let vehicles =await fetch(baseUrl + \"vehicles\",{\n            headers: {\n                Authorization: \"Bearer \" + userStore.token\n            }\n        })\n        //Fill in some autos\n    }\n\n\n}\nexport const agent = new Agent();","import Agent, {agent} from \"./Agent\";\nimport {decorate, observable} from \"mobx\";\nimport {toast} from 'react-toastify';\n\n\nclass UserStore{\n    loginStates = {LOGGING_IN:\"loading\", LOGGED_OUT:\"logout\", LOGGED_IN:\"LoggedIn\"};\n    token = window.localStorage.getItem(\"NofossToken\");\n    constructor(){\n        //let nofossToken = localStorage.getItem(\"NofossToken\");\n        if (this.token){\n            this.state = this.loginStates.LOGGED_IN;\n        }\n        this.startTokenCheck();\n    }\n\n    adminNavBar = [\n        {href:\"#/search\",name:\"Søg køretøj\"},\n        {href:\"#/create/vehicle\",name:\"Opret køretøj\"},\n        {href:\"#/profile\",name:\"Profil\"}];\n\n    loginData={username:\"\",password:\"\"};\n    state = this.loginStates.LOGGED_OUT;\n\n    doLogin(){\n        agent.doLogin(this.loginData);\n    }\n\n    startTokenCheck() {\n        if(!this.token) return;\n        let splitToken = this.token.split(\".\")[1];\n        let parse = JSON.parse(window.atob(splitToken));\n        let exp = new Date(parse.exp * 1000);\n        const now = new Date();\n        let timeOut = (exp - now) - 10000;\n        this.timer = setTimeout(()=>{\n                localStorage.clear();\n                this.token = null;\n                this.state=this.loginStates.LOGGED_OUT;\n                toast.warn(\"Dit login er udløbet. Log ind igen\")\n            }, timeOut)\n    }\n}\n\ndecorate(UserStore,{\n    state:observable\n})\n\nexport const userStore = new UserStore();","import {observer} from \"mobx-react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport React from \"react\";\nimport {userStore} from \"../stores/UserStore\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport {Col, Row} from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\n\nexport const CustomNavBar = observer(() => {\n    return (\n        <Container>\n            <Row>\n                <Col md={{span: 8, offset: 0}}>\n                    <Navbar bg=\"light\" expand=\"lg\">\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n                                <Navbar.Brand href={'#/search'}>Nofoss</Navbar.Brand>\n                                {userStore.adminNavBar.map((element) => <Nav.Link href={element.href}>{element.name}</Nav.Link>)}\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </Col>\n                <Col md={{span: 4, offset:0}} className=\"d-none d-lg-block\">\n                    <img src=\"https://i.imgur.com/bVMYcYR.png\" className=\"Logo\" alt=\"NoFoss Logo\"/>\n                </Col>\n            </Row>\n        </Container>\n\n    );\n});","import {Col, FormControl, InputGroup, Row} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {CreateUser} from \"./CreateUser\";\nimport Container from \"react-bootstrap/Container\";\nimport {userStore} from \"../stores/UserStore\";\n\nexport const LogIn = () => {\n    return (\n        <div>\n            <Container>\n                <Row><Col md={{span: 6, offset: 3}} style={{\n                    background: '#fff',\n                    padding: '20pt',\n                    border: '1px solid',\n                    borderColor: '#d8dee2',\n                    borderRadius: \"5pt\"\n                }}>\n                    <Container>\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Email</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => userStore.loginData.username = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row><Col md={{span: 10, offset: 1}}>\n                            <text>Password</text>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl\n                                    type=\"password\"\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => userStore.loginData.password = e.target.value}\n                                />\n                            </InputGroup></Col></Row>\n\n                        <Row>\n                            <Col md={{span: 5, offset: 1}}>\n                                <Button onClick={login} style={{\n                                    width: '100%',\n                                    background:'#637724',\n                                    borderColor:'#637724'\n                                }}>Login</Button>\n                            </Col>\n                            <Col md={{span: 5, offset: 0}}>\n                                <Button href=\"#/create/User\"\n                                        style={{\n                                    width: '100%',\n                                    background: '#fff',\n                                    border: '1px solid',\n                                    borderColor: '#637724',\n                                    color:'#637724'\n                                }}>Opret bruger</Button >\n                            </Col>\n                        </Row>\n                    </Container>\n                </Col></Row>\n            </Container>\n        </div>\n    )\n};\n\nfunction login() {\n    userStore.doLogin();\n}","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport {Col, Row} from \"react-bootstrap\";\n\nexport function CarCard({Car}) {\n    const {name,brand,price,fuelType,maxWeight,maxRange,imageLink} = Car\n    return (\n        <Card>\n            <Row>\n                <Col md={{span: 4, offset: 0}}>\n                    <Card.Header>{brand} - {name}</Card.Header>\n                    <Card.Body>\n                        <img style={{width: '100%'}} src={imageLink} alt=\"Billede af bil\"/>\n                    </Card.Body>\n                </Col>\n                <Col>\n                    <Card.Body>\n                        Pris: {price} kr.\n                        <br/>\n                        Totalvægt: {maxWeight} kg.\n                        <br/>\n                        Total rækkevidde: {maxRange} km.\n                        <br/>\n                        Brændstof: {fuelType}.\n                    </Card.Body>\n                </Col>\n            </Row>\n        </Card>\n    )\n}","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {vehicleStore} from \"../stores/VehicleStore\";\nimport {CarCard} from \"./CarCard\";\nimport {FormControl, InputGroup} from \"react-bootstrap\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {observer} from \"mobx-react\";\n\nexport const SearchVehicleNew = observer(() => {\n\n    const [value, setValue] = React.useState([0, 100]);\n\n    /*Contains checkbox boolean setting TODO: implement these with brandArray*/\n    const [state, setState] = React.useState({\n        Volvo: true,\n        Mercedes: true,\n        Ford: true\n    });\n\n    const checkboxChange = name => event => {\n        setState({...state, [name]: event.target.checked});\n    };\n\n    const sliderChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const brandBoxArray = vehicleStore.brands.map((brand, key) =>\n        <FormControlLabel key={key}\n                          control={\n                              <Checkbox\n                                  //checked={true}\n                                  //onChange={checkboxChange(brand)}\n                                  value={brand}\n                                  onChange={(e) => {\n                                      if (e.target.checked) {\n                                          vehicleStore.selectedBrands.push(brand)\n                                          console.log(vehicleStore.selectedBrands)\n                                      } else {\n                                          var index = vehicleStore.selectedBrands.indexOf(e.target.value);\n                                          if (index > -1) {\n                                              vehicleStore.selectedBrands.splice(index, 1);\n                                          }\n                                      }\n                                  }\n                                  }\n                              />\n                          }\n                          label={brand}\n        />\n    )\n\n    const fuelBoxArray = vehicleStore.fuelType.map((brand, key) =>\n        <FormControlLabel key={key}\n                          control={\n                              <Checkbox\n                                  //checked={true}\n                                  //onChange={checkboxChange(brand)}\n                                  value={brand}\n                                  onChange={(e) => {\n                                      if (e.target.checked) {\n                                          vehicleStore.selectedFuelTypes.push(brand)\n                                          console.log(vehicleStore.selectedFuelTypes)\n                                      } else {\n                                          var index = vehicleStore.selectedFuelTypes.indexOf(e.target.value);\n                                          if (index > -1) {\n                                              vehicleStore.selectedFuelTypes.splice(index, 1);\n                                          }\n                                      }\n                                  }\n                                  }\n                              />\n                          }\n                          label={brand}\n        />\n    )\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Typography gutterBottom>Mærke</Typography>\n                    <Row>\n                        {brandBoxArray}\n                    </Row>\n                    <Typography gutterBottom>Navn</Typography>\n                    <Row>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl\n                                aria-label=\"Default\"\n                                aria-describedby=\"inputGroup-sizing-default\"\n                                onChange={(e) => vehicleStore.searchName = e.target.value}\n                            />\n                        </InputGroup>\n                    </Row>\n\n                    <Typography gutterBottom>Vægt</Typography>\n                    <Row>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">min</InputGroup.Text>\n                                </InputGroup.Append>\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => vehicleStore.searchMinWeight = e.target.value}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">kg.</InputGroup.Text>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">max</InputGroup.Text>\n                                </InputGroup.Append>\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => vehicleStore.searchMaxWeight = e.target.value}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">kg.</InputGroup.Text>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n\n                    <Typography gutterBottom>Rækkevidde</Typography>\n                    <Row>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">min</InputGroup.Text>\n                                </InputGroup.Append>\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => vehicleStore.searchMinRange = e.target.value}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">km.</InputGroup.Text>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">max</InputGroup.Text>\n                                </InputGroup.Append>\n                                <FormControl\n                                    aria-label=\"Default\"\n                                    aria-describedby=\"inputGroup-sizing-default\"\n                                    onChange={(e) => vehicleStore.searchMaxRange = e.target.value}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"basic-addon2\">km.</InputGroup.Text>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                    <Typography gutterBottom>Drivmiddel</Typography>\n                    <Row>\n                        {fuelBoxArray}\n                    </Row>\n                </Col>\n                <Col xs={8} style={{overflow: 'scroll'}}>\n                        {vehicleStore.filteredVehicles.map(vehicle =>\n                            /*Here should be a filter to only insert the cards passing the filter into the cardArray*/\n                            <CarCard Car={vehicle}/>)}\n                </Col>\n            </Row>\n        </Container>\n    )\n})","import React from \"react\";\nimport {observer} from \"mobx-react\";\n\nexport const Profile = observer(()=>{\n    return(\n        <h1>Her vil dine profil indstillinger blive vist</h1>\n    )\n})","import React from 'react';\nimport {observer} from \"mobx-react\";\nimport {Switch} from \"react-router\";\nimport {Route} from \"react-router-dom\"\nimport './App.css';\nimport {CreateVehicle} from \"./components/CreateVehicle\";\nimport {CreateUser} from \"./components/CreateUser\";\nimport {CustomNavBar} from \"./components/CustomNavBar\";\nimport {LogIn} from \"./components/Login\";\nimport {SearchVehicleNew} from \"./components/SearchVehicleNew\";\nimport Container from \"react-bootstrap/Container\";\nimport {Profile} from \"./components/Profile\";\nimport {userStore} from \"./stores/UserStore\";\n\nfunction App() {\n    return (\n        <Container>\n            <CustomNavBar/>\n                <Switch>\n                    {userStore.state !== userStore.loginStates.LOGGED_IN && <LogIn/>}\n                    {userStore.state === userStore.loginStates.LOGGED_IN &&\n                        <>\n                    <Route exact path={\"/login\"} component={LogIn}/>\n                    <Route exact path={\"/search\"} component={SearchVehicleNew}/>\n                    <Route exact path={\"/create/vehicle\"} component={CreateVehicle}/>\n                    <Route exact path={\"/create/user\"} component={CreateUser}/>\n                    <Route exact path={\"/profile\"} component={Profile}/>\n                    <Route exact path={\"/\"} component={SearchVehicleNew}/>\n                    </>\n                        }\n                    <Route render={() => <h1>404</h1>}/>\n                </Switch>\n        </Container>\n    );\n}\n\nexport default observer(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}